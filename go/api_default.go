/*
 * Дендрарий
 *
 * Учет деревьев, кустарников, лиан
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"encoding/json"
	"net/http"
	"strconv"

	"github.com/gorilla/mux"
)

var plants = []Plant{}
var idCounter int = 0

func CreatePlant(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	var plant Plant

	err := json.NewDecoder(r.Body).Decode(&plant)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	} else if plant.Species == "" {
		http.Error(w, "Вид растения должен быть указан", http.StatusBadRequest)
		return
	} else if plant.PlantingYear == 0 {
		http.Error(w, "Год посадки должен быть указан", http.StatusBadRequest)
		return
	}

	plant.Id = idCounter
	idCounter++
	plants = append(plants, plant)
	w.WriteHeader(200)
}

func DeletePlant(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	vars := mux.Vars(r)
	id, err := strconv.Atoi(vars["id"])

	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}

	for i, plant := range plants {
		if plant.Id == id {
			plants = append(plants[:i], plants[i+1:]...)
			w.WriteHeader(200)
			return
		}
	}

	http.Error(w, "Растение с таким id не найдено", 404)
}

func GetPlantById(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	vars := mux.Vars(r)
	id, err := strconv.Atoi(vars["id"])

	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}

	for _, plant := range plants {
		if plant.Id == id {
			json.NewEncoder(w).Encode(plant)
			return
		}
	}

	http.Error(w, "Растение с таким id не найдено", 404)
}

func GetPlants(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	json.NewEncoder(w).Encode(plants)
}

func UpdatePlant(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	vars := mux.Vars(r)
	id, err := strconv.Atoi(vars["id"])

	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}

	var newPlant Plant

	bodyError := json.NewDecoder(r.Body).Decode(&newPlant)
	if bodyError != nil {
		http.Error(w, bodyError.Error(), http.StatusBadRequest)
		return
	}

	for i, plant := range plants {
		if plant.Id == id {
			plants[i].PlantingYear = newPlant.PlantingYear
			plants[i].Species = newPlant.Species
			w.WriteHeader(200)
			return
		}
	}

	http.Error(w, "Растение с таким id не найдено", 404)
}
